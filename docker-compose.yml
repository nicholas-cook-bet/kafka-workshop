version: "3.9"
services:
  zookeeper:
    image: 'bitnami/zookeeper:3.7'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    healthcheck:
      test:  "echo mntr | nc -w 2 -q 2 localhost 2181"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - public

  kafka:
    hostname: kafka
    image: 'bitnami/kafka:3.0.0'
    ports:
      - '9092:9092'
      - '29092:29092'
    environment:
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    healthcheck:
      test: "kafka-topics.sh --bootstrap-server kafka:9092 --list"
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      - zookeeper
    networks:
      - public

  cockroach:
    image: ghcr.io/bet01/cockroach_ci_image:master
    container_name: cockroachdb
    hostname: cockroach_node_1
    depends_on:
      - kafka
    environment:
      RUN_SQL_AFTER_BOOT: "SET CLUSTER SETTING cluster.organization = '$BET_COCKROACHDB_ORG';
        SET CLUSTER SETTING enterprise.license = '$BET_COCKROACHDB_LICENSE';
        SET CLUSTER SETTING kv.rangefeed.enabled = true;
        CREATE DATABASE betstrike;"
        ## existence of betstrike is used to synchronise startup,
        ## make sure it's created in the last statement
    ports:
      - 26257:26257
      - 8081:8080
    mem_limit: 512m
    mem_reservation: 128M
    cpus: 0.5
    networks:
      - public

networks:
  public:
    driver: bridge
